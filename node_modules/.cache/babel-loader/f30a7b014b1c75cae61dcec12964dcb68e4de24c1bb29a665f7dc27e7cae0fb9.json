{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/gasless_minting_website/GASLESS_MINTING_WEBSITE/gasless_nft_mint/src/components/NFTmint.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport MyContract from \"../NFTToken.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NFTMinter = ({\n  contractAddress\n}) => {\n  _s();\n  const [toAddress, setToAddress] = useState(\"\");\n  const [tokenId, setTokenId] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [signature, setSignature] = useState(\"\");\n  const [transactionHash, setTransactionHash] = useState(\"\");\n  const [error, setError] = useState(null);\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  const signer = provider.getSigner();\n  const contract = new ethers.Contract(contractAddress, MyContract.abi, signer);\n  const handleSafeMint = async () => {\n    try {\n      // // Connect to the Ethereum network using MetaMask\n      // const provider = new ethers.providers.Web3Provider(window.ethereum);\n      // await provider.send(\"eth_requestAccounts\", []);\n\n      // // Get the signer from the provider\n      // const signer = provider.getSigner();\n      // console.log(\"Account:\", await signer.getAddress());\n\n      // // Create a contract instance using the contract address and ABI\n      // const contract = new ethers.Contract(\n      //   contractAddress,\n      //   MyContract.abi,\n      //   signer\n      // );\n\n      // Call the safeMint function with the required parameters\n      const tx = await contract.safeMint(toAddress, tokenId, name, signature);\n\n      // Wait for the transaction to be mined\n      await tx.wait();\n      setTransactionHash(tx.hash);\n    } catch (error) {\n      console.error(\"Error in safeMint:\", error);\n      setError(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Safe Mint NFT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"To Address:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: toAddress,\n      onChange: e => setToAddress(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Token ID:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: tokenId,\n      onChange: e => setTokenId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Signature:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: signature,\n      onChange: e => setSignature(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSafeMint,\n      children: \"Safe Mint\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), transactionHash && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Transaction Hash: \", transactionHash]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 27\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(NFTMinter, \"+elNW0TCNmvHplOb2hQadBFTFy0=\");\n_c = NFTMinter;\nexport default NFTMinter;\nvar _c;\n$RefreshReg$(_c, \"NFTMinter\");","map":{"version":3,"names":["React","useState","ethers","MyContract","jsxDEV","_jsxDEV","NFTMinter","contractAddress","_s","toAddress","setToAddress","tokenId","setTokenId","name","setName","signature","setSignature","transactionHash","setTransactionHash","error","setError","provider","providers","Web3Provider","window","ethereum","signer","getSigner","contract","Contract","abi","handleSafeMint","tx","safeMint","wait","hash","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/gasless_minting_website/GASLESS_MINTING_WEBSITE/gasless_nft_mint/src/components/NFTmint.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport MyContract from \"../NFTToken.json\";\n\nconst NFTMinter = ({ contractAddress }) => {\n  const [toAddress, setToAddress] = useState(\"\");\n  const [tokenId, setTokenId] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [signature, setSignature] = useState(\"\");\n  const [transactionHash, setTransactionHash] = useState(\"\");\n  const [error, setError] = useState(null);\n\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  const signer = provider.getSigner();\n  const contract = new ethers.Contract(contractAddress, MyContract.abi, signer);\n\n  const handleSafeMint = async () => {\n    try {\n      // // Connect to the Ethereum network using MetaMask\n      // const provider = new ethers.providers.Web3Provider(window.ethereum);\n      // await provider.send(\"eth_requestAccounts\", []);\n\n      // // Get the signer from the provider\n      // const signer = provider.getSigner();\n      // console.log(\"Account:\", await signer.getAddress());\n\n      // // Create a contract instance using the contract address and ABI\n      // const contract = new ethers.Contract(\n      //   contractAddress,\n      //   MyContract.abi,\n      //   signer\n      // );\n\n      // Call the safeMint function with the required parameters\n      const tx = await contract.safeMint(toAddress, tokenId, name, signature);\n\n      // Wait for the transaction to be mined\n      await tx.wait();\n\n      setTransactionHash(tx.hash);\n    } catch (error) {\n      console.error(\"Error in safeMint:\", error);\n      setError(error.message);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Safe Mint NFT</h2>\n      <label>To Address:</label>\n      <input\n        type=\"text\"\n        value={toAddress}\n        onChange={(e) => setToAddress(e.target.value)}\n      />\n      <br />\n      <label>Token ID:</label>\n      <input\n        type=\"text\"\n        value={tokenId}\n        onChange={(e) => setTokenId(e.target.value)}\n      />\n      <br />\n      <label>Name:</label>\n      <input\n        type=\"text\"\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n      />\n      <br />\n      <label>Signature:</label>\n      <input\n        type=\"text\"\n        value={signature}\n        onChange={(e) => setSignature(e.target.value)}\n      />\n      <br />\n      <button onClick={handleSafeMint}>Safe Mint</button>\n      {transactionHash && <p>Transaction Hash: {transactionHash}</p>}\n      {error && <p>Error: {error}</p>}\n    </div>\n  );\n};\n\nexport default NFTMinter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}