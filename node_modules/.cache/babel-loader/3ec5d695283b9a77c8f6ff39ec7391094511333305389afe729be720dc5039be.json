{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/gasless_minting_website/GASLESS_MINTING_WEBSITE/gasless_nft_mint/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport MyContract from \"./NFTToken.json\"; // Import the JSON artifact file\nimport WalletGenerator from \"./components/WalletGenerator\";\nimport SignatureGenerator from \"./components/SignatureGenerator\";\nimport NFTMinter from \"./components/NFTmint\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [deployedContractAddress, setDeployedContractAddress] = useState(\"\");\n  useEffect(() => {\n    // Check if MetaMask is installed and connected\n    if (typeof window.ethereum !== \"undefined\") {\n      console.log(\"MetaMask is installed!\");\n    } else {\n      console.log(\"MetaMask is not installed!\");\n    }\n  }, []);\n  const deployContract = async () => {\n    try {\n      // Connect to MetaMask provider\n      await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n\n      // Load the contract ABI and bytecode\n      const contractAbi = MyContract.abi;\n      const contractBytecode = MyContract.bytecode;\n\n      // Create a new contract instance\n      const contractFactory = new ethers.ContractFactory(contractAbi, contractBytecode, signer);\n      const deployedContract = await contractFactory.deploy();\n\n      // Wait for the contract to be deployed and get its address\n      await deployedContract.deployed();\n      const deployedAddress = deployedContract.address;\n\n      // Update the state with the deployed contract address\n      setDeployedContractAddress(deployedAddress);\n      alert(\"Contract deployed at: \" + deployedAddress);\n    } catch (error) {\n      console.error(\"Error deploying contract:\", error);\n      alert(\"Error deploying contract: \" + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Deploy Contract via MetaMask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: deployContract,\n      children: \"Deploy Contract\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), deployedContractAddress && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Contract deployed at: \", deployedContractAddress]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(WalletGenerator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SignatureGenerator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NFTMinter, {\n      contractAddress: deployedContractAddress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7rQqDaO3Q9/6WRqhZyQ3n0fUf/g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ethers","MyContract","WalletGenerator","SignatureGenerator","NFTMinter","jsxDEV","_jsxDEV","App","_s","deployedContractAddress","setDeployedContractAddress","window","ethereum","console","log","deployContract","request","method","provider","providers","Web3Provider","signer","getSigner","contractAbi","abi","contractBytecode","bytecode","contractFactory","ContractFactory","deployedContract","deploy","deployed","deployedAddress","address","alert","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","contractAddress","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/gasless_minting_website/GASLESS_MINTING_WEBSITE/gasless_nft_mint/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport MyContract from \"./NFTToken.json\"; // Import the JSON artifact file\nimport WalletGenerator from \"./components/WalletGenerator\";\nimport SignatureGenerator from \"./components/SignatureGenerator\";\nimport NFTMinter from \"./components/NFTmint\";\n\nfunction App() {\n  const [deployedContractAddress, setDeployedContractAddress] = useState(\"\");\n\n  useEffect(() => {\n    // Check if MetaMask is installed and connected\n    if (typeof window.ethereum !== \"undefined\") {\n      console.log(\"MetaMask is installed!\");\n    } else {\n      console.log(\"MetaMask is not installed!\");\n    }\n  }, []);\n\n  const deployContract = async () => {\n    try {\n      // Connect to MetaMask provider\n      await window.ethereum.request({ method: \"eth_requestAccounts\" });\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n\n      // Load the contract ABI and bytecode\n      const contractAbi = MyContract.abi;\n      const contractBytecode = MyContract.bytecode;\n\n      // Create a new contract instance\n      const contractFactory = new ethers.ContractFactory(\n        contractAbi,\n        contractBytecode,\n        signer\n      );\n      const deployedContract = await contractFactory.deploy();\n\n      // Wait for the contract to be deployed and get its address\n      await deployedContract.deployed();\n      const deployedAddress = deployedContract.address;\n\n      // Update the state with the deployed contract address\n      setDeployedContractAddress(deployedAddress);\n      alert(\"Contract deployed at: \" + deployedAddress);\n    } catch (error) {\n      console.error(\"Error deploying contract:\", error);\n      alert(\"Error deploying contract: \" + error.message);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 >Deploy Contract via MetaMask</h1>\n      <button onClick={deployContract}>Deploy Contract</button>\n      {deployedContractAddress && (\n        <p>Contract deployed at: {deployedContractAddress}</p>\n      )}\n      <WalletGenerator />\n      <SignatureGenerator />\n      <NFTMinter contractAddress={deployedContractAddress} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}